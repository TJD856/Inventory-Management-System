import tkinter as tk
from tkinter import ttk, messagebox
import pandas as pd
from fpdf import FPDF
import sqlite3

class IMSReportGUI:
    def __init__(self, root):
        self.root = root
        self.root.title("Inventory Management Reports")
        self.root.geometry("600x400")
        
        ttk.Label(root, text="Select Report Type:").pack(pady=10)
        self.report_type = ttk.Combobox(root, values=["Stock Summary", "Low Stock Items", "Sales Report"])
        self.report_type.pack()
        
        ttk.Button(root, text="Generate Report", command=self.generate_report).pack(pady=10)
        
        ttk.Button(root, text="Export to PDF", command=self.export_to_pdf).pack(pady=5)
        ttk.Button(root, text="Export to Excel", command=self.export_to_excel).pack(pady=5)
        
        self.text_area = tk.Text(root, height=10, width=70)
        self.text_area.pack(pady=10)
        
    def fetch_data(self, report_type):
        conn = sqlite3.connect("ims.db")
        cursor = conn.cursor()
        
        if report_type == "Stock Summary":
            query = "SELECT item_name, stock_quantity FROM inventory"
        elif report_type == "Low Stock Items":
            query = "SELECT item_name, stock_quantity FROM inventory WHERE stock_quantity < 10"
        elif report_type == "Sales Report":
            query = "SELECT item_name, quantity_sold, total_revenue FROM sales"
        else:
            return []
        
        cursor.execute(query)
        data = cursor.fetchall()
        conn.close()
        return data
    
    def generate_report(self):
        report_type = self.report_type.get()
        data = self.fetch_data(report_type)
        
        if not data:
            self.text_area.delete("1.0", tk.END)
            self.text_area.insert(tk.END, "No data available.")
            return
        
        report_text = f"{report_type} Report:\n"
        for row in data:
            report_text += f"{row}\n"
        
        self.text_area.delete("1.0", tk.END)
        self.text_area.insert(tk.END, report_text)
    
    def export_to_pdf(self):
        report_text = self.text_area.get("1.0", tk.END)
        if not report_text.strip():
            messagebox.showerror("Error", "No report generated!")
            return
        
        pdf = FPDF()
        pdf.set_auto_page_break(auto=True, margin=15)
        pdf.add_page()
        pdf.set_font("Arial", size=12)
        pdf.multi_cell(0, 10, report_text)
        pdf.output("report.pdf")
        messagebox.showinfo("Success", "Report exported as PDF!")
    
    def export_to_excel(self):
        report_type = self.report_type.get()
        data = self.fetch_data(report_type)
        
        if not data:
            messagebox.showerror("Error", "No data available for export!")
            return
        
        df = pd.DataFrame(data, columns=["Item Name", "Stock Quantity"] if report_type != "Sales Report" else ["Item Name", "Quantity Sold", "Total Revenue"])
        df.to_excel("report.xlsx", index=False)
        messagebox.showinfo("Success", "Report exported as Excel!")

if __name__ == "__main__":
    root = tk.Tk()
    app = IMSReportGUI(root)
    root.mainloop()
